INFO  16:45:46,350 - Compiling source file: D:\etf\CETVRTA GODINA\PP\Projekat\workspace\MJCompiler\test\test302.mj
INFO  16:45:46,392 - #6 program
INFO  16:45:46,392 - #5 test302
INFO  16:45:46,392 - #9 const
INFO  16:45:46,393 - #5 int
INFO  16:45:46,393 - #5 jedan
INFO  16:45:46,394 - #12 =
INFO  16:45:46,394 - #4 1
INFO  16:45:46,394 - #10 ;
INFO  16:45:46,394 - #5 int
INFO  16:45:46,395 - #5 i
INFO  16:45:46,395 - #10 ;
INFO  16:45:46,395 - #5 bool
INFO  16:45:46,395 - #5 ibool
INFO  16:45:46,395 - #10 ;
INFO  16:45:46,395 - #5 int
INFO  16:45:46,396 - #5 niz2
INFO  16:45:46,396 - #13 [
INFO  16:45:46,396 - #14 ]
INFO  16:45:46,396 - #10 ;
INFO  16:45:46,396 - #5 int
INFO  16:45:46,396 - #5 niz
INFO  16:45:46,396 - #13 [
INFO  16:45:46,396 - #14 ]
INFO  16:45:46,396 - #10 ;
INFO  16:45:46,396 - #5 int
INFO  16:45:46,397 - #5 a
INFO  16:45:46,397 - #11 ,
INFO  16:45:46,397 - #5 curr
INFO  16:45:46,397 - #10 ;
INFO  16:45:46,397 - #7 {
INFO  16:45:46,397 - #5 int
INFO  16:45:46,398 - #5 sum
INFO  16:45:46,398 - #15 (
INFO  16:45:46,398 - #5 int
INFO  16:45:46,398 - #5 z
INFO  16:45:46,398 - #11 ,
INFO  16:45:46,398 - #5 int
INFO  16:45:46,398 - #5 d
INFO  16:45:46,398 - #16 )
INFO  16:45:46,399 - #7 {
INFO  16:45:46,399 - #35 return
INFO  16:45:46,400 - #5 z
INFO  16:45:46,400 - #31 +
INFO  16:45:46,402 - #5 d
INFO  16:45:46,403 - #10 ;
INFO  16:45:46,403 - #8 }
INFO  16:45:46,403 - #5 int
INFO  16:45:46,404 - #5 inkrement
INFO  16:45:46,404 - #15 (
INFO  16:45:46,405 - #5 int
INFO  16:45:46,405 - #5 a
INFO  16:45:46,405 - #11 ,
INFO  16:45:46,405 - #5 int
INFO  16:45:46,405 - #5 inc
INFO  16:45:46,405 - #16 )
INFO  16:45:46,405 - #5 int
INFO  16:45:46,405 - #5 pom
INFO  16:45:46,405 - #10 ;
INFO  16:45:46,405 - #7 {
INFO  16:45:46,406 - #40 if
INFO  16:45:46,406 - #15 (
INFO  16:45:46,406 - #5 inc
INFO  16:45:46,406 - #25 ==
INFO  16:45:46,406 - #5 jedan
INFO  16:45:46,407 - #16 )
INFO  16:45:46,409 - #5 pom
INFO  16:45:46,409 - #12 =
INFO  16:45:46,409 - #4 1
INFO  16:45:46,410 - #10 ;
INFO  16:45:46,414 - #20 else
INFO  16:45:46,414 - #40 if
INFO  16:45:46,414 - #15 (
INFO  16:45:46,420 - #5 inc
INFO  16:45:46,420 - #25 ==
INFO  16:45:46,420 - #4 2
INFO  16:45:46,420 - #16 )
INFO  16:45:46,421 - #5 pom
INFO  16:45:46,421 - #12 =
INFO  16:45:46,421 - #5 a
INFO  16:45:46,421 - #10 ;
INFO  16:45:46,422 - #35 return
INFO  16:45:46,423 - #5 sum
INFO  16:45:46,423 - #15 (
INFO  16:45:46,423 - #5 a
INFO  16:45:46,423 - #11 ,
INFO  16:45:46,423 - #5 pom
INFO  16:45:46,424 - #16 )
INFO  16:45:46,425 - #10 ;
INFO  16:45:46,425 - #8 }
INFO  16:45:46,426 - #5 bool
INFO  16:45:46,426 - #5 verify
INFO  16:45:46,426 - #15 (
INFO  16:45:46,426 - #16 )
INFO  16:45:46,426 - #7 {
INFO  16:45:46,426 - #23 print
INFO  16:45:46,426 - #15 (
INFO  16:45:46,427 - #2 v
INFO  16:45:46,427 - #16 )
INFO  16:45:46,427 - #10 ;
INFO  16:45:46,428 - #35 return
INFO  16:45:46,428 - #10 ;
INFO  16:45:46,428 - #8 }
INFO  16:45:46,428 - #21 void
INFO  16:45:46,428 - #5 main
INFO  16:45:46,428 - #15 (
INFO  16:45:46,429 - #16 )
INFO  16:45:46,429 - #7 {
INFO  16:45:46,429 - #40 if
INFO  16:45:46,429 - #15 (
INFO  16:45:46,429 - #4 1
INFO  16:45:46,429 - #26 !=
INFO  16:45:46,429 - #4 1
INFO  16:45:46,430 - #16 )
INFO  16:45:46,430 - #23 print
INFO  16:45:46,430 - #15 (
INFO  16:45:46,430 - #19 -
INFO  16:45:46,430 - #4 6
INFO  16:45:46,430 - #16 )
INFO  16:45:46,430 - #10 ;
INFO  16:45:46,430 - #20 else
INFO  16:45:46,430 - #23 print
INFO  16:45:46,430 - #15 (
INFO  16:45:46,430 - #4 0
INFO  16:45:46,431 - #16 )
INFO  16:45:46,431 - #10 ;
INFO  16:45:46,431 - #5 ibool
INFO  16:45:46,431 - #12 =
INFO  16:45:46,431 - #3 false
INFO  16:45:46,431 - #10 ;
